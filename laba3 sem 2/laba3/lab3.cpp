/*
Тип элемента вектора (массива) int
Первый операнд: int *		Второй операнд: vector			Результат: int *
Перегрузить операции и продемонстрировать их работу:
1. [] (обращение к элементу вектора по индексу) 
2. операцию = (копирование вектора или создание копии вектора). 
3. ^ побитовая операция с двумя векторами одинаковой размерности
*/

#include <iostream>
#include <conio.h>

using namespace std;

class vector
{
public:
	int *p;										// Указатель на массив (вектор)
	int n;										// Размерность вектора (число элементов)

	vector(int *p, int n)						// Коструктор на входе массив, задающий вектор
	{
		this->n=n;								// Задаем число элементов
		this->p=new int[n];						// Выделяем память
		for(int i=0; i<n; i++) 
			this->p[i]=p[i];					// Копируем один массив в другой
	}

	void print()								// Печать вектора (массива)
	{
		for(int i=0; i<n; i++)
			cout<<p[i]<<" ";
	}

	vector()									// Конструктор без параметров, задает "пустой" объект
	{ 
		p=0; 
		n=0; 
	} 

	int & operator[](int index)					// Оператор- функция (перегрузка операции обращения к элементу)
	{
		return p[index];
	}

	vector & operator =(vector & v0)			// Оператор-функция копирования объекта 
	{
		n=v0.n;
		p=new int[n];
		for(int i=0; i<n; i++) 
			p[i]=v0.p[i];
		return *this;
	}

	~vector()									// Деструктор
	{
		if (n>0) delete [] p;					// Освобождаем память
	}
};

vector & operator ^(vector & v0, vector & v1)	// Оператор- функция вне класса 
{
	int *p=new int[v0.n];						// Создаем новый массив
	for(int i=0; i<v0.n; i++) 
		p[i]=v1.p[i]^v0.p[i];					// Заполняем массив
	vector *pV=new vector(p, v0.n);				// Создаем новый объект на основе массива
	delete [] p;								// Освобождаем массив
	return *pV;									// Возвращаем ссылку на объект
}

void main()
{
	setlocale(LC_ALL, "Russian");
	
	int m1[]={ 1, 3, 5, 7, 9};
	vector V1(m1, 5);							// Создаем объект
	cout<<"Вектор V1 = ";
	V1.print();									

	cout<<"\n\nОперация копирования объекта:\n";
	for(int i=0; i<5; i++)
		cout<<V1[i]<<" ";						
	
	V1[2]=20;
	cout<<"\n\nОперация обращения к элементу:\nV1= ";
	V1.print();	
	
	int m2[]={0,0,0,0,0};
	vector V2(m2,5);							// Создаем объект
	cout<<"\n\nВведите вектор размерности n=5:\n";
	for(int i=0; i<5; i++)
		cin>>V2[i];
	cout<<"\nВектор V2 = ";
	V2.print();
	
	vector V3;									// Создаем объект
	V3=V1^V2;
	cout<<"\n\nV1 ^ V2 = ";
	V3.print();
	_getch();
}
